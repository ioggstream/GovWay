
<project name="setup" basedir=".">
	
	<description>
        	SETUP
	</description>

	<import file="local_env.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="./ant/pdd-build.xml" />
	<import file="./ant/sql-build.xml" />
	<import file="./ant/ds-build.xml" />
	<import file="./ant/govwayConsole-build.xml" />
	<import file="./ant/govwayMonitor-build.xml" />
	<import file="./ant/loader-build.xml" />
	<import file="./ant/distrib-build.xml" />
	<import file="./ant/jar-build.xml" />
	<import file="../commons/utils.xml" />
	
	<property name="deploy_resources" location="deploy/resources" />
	<property name="deploy_sw" location="deploy/sw" />
	<property name="deploy_sql" location="deploy/sql" />
	<property name="deploy_ds" location="deploy/datasource" />
	<property name="deploy_jms" location="deploy/jms" />
	<property name="tmp_archivi" location="${build}/archivi" />
	<property name="tmp_sql" location="${build}/sql" />
	<property name="tmp_ds" location="${build}/ds" />
	<property name="tmp_cfg" location="${build}/cfg" />
	
	<!-- Ripulisce la distribuzione -->
	<target name="clean">
		<delete dir="${build}" includeemptydirs="true" verbose="true" />
		<delete dir="${dist}" includeemptydirs="true" verbose="true" />
	</target>

	
	<!-- Create the build directory structure used by compile -->
	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${tmp_sql}" />
		<mkdir dir="${tmp_ds}" />
		<mkdir dir="${tmp_archivi}" />
		<mkdir dir="${tmp_cfg}" />
		<mkdir dir="${dist}" />
	</target>
	
	
	<!-- 
		Impostazione variabili prelevate da SETUP antinstaller, esempio:
		
		ModalitàInstallazione
			antinstaller_modalita_installazione

		Aggiornamento
			antinstaller_versione_attuale
			antinstaller_versione_precedente

		Informazioni preliminari
			antinstaller_directory_lavoro_openspcoop=/var/govway
			antinstaller_directory_log_openspcoop=/var/govway/log
			antinstaller_tipo_database=postgresql
			antinstaller_as=jboss5  -> Trasformata poi nel build reale subito sotto attraverso la variabile build_for_as
			
		Il Database
			antinstaller_driver_jdbc=org.postgresql.Driver
			antinstaller_dbname=openspcoop
			antinstaller_dbhost=127.0.0.1
			antinstaller_dbport=5432
			antinstaller_dbusername=openspcoop
			antinstaller_dbpassword=openspcoop
			antinstaller_oracle_mode=SID/serviceName
			
		Utenze
			antinstaller_pddconsole_username=amministratore
			antinstaller_pddconsole_password=
			antinstaller_pddmonitor_username=operatore
			antinstaller_pddmonitor_password=

		Cooperazione Applicativa
			antinstaller_protocollo_trasparente=true
			antinstaller_protocollo_spcoop=true
			antinstaller_protocollo_as4=true
			antinstaller_protocollo_sdi=false
			antinstaller_nomesoggetto=NOMESOGGETTO
			antinstaller_tiposoggetto_trasparente=gw
			antinstaller_tiposoggetto_spcoop=spc
			antinstaller_tiposoggetto_as4=as4
			antinstaller_tiposoggetto_sdi=sdi
			
		Configurazione Avanzata
			antinstaller_stateful=false
			antinstaller_sec_container=false

		Compatibilità interfacce OpenSPCoop-v1
			antinstaller_backward_compatibility=true
			
	 -->

	
	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="jboss.*"/>
			<matches string="${antinstaller_as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="datasource_pdd_name" value="org.govway.datasource"/>
			<var name="datasource_console_name" value="org.govway.datasource.console"/>
			<var name="datasource_domibus_name" value="org.govway.datasource.domibus"/>
		</then>
		<else>
			<var name="datasource_pdd_name" value="java:/comp/env/org.govway.datasource"/>
			<var name="datasource_console_name" value="java:/comp/env/org.govway.datasource.console"/>
			<var name="datasource_domibus_name" value="java:/comp/env/org.govway.datasource.domibus"/>
		</else>
	</if>
	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="tomcat.*"/>
		</or>
		<then>
			<var name="build_for_as" value="tomcat7"/>
		</then>
		<else>
			<var name="build_for_as" value="${antinstaller_as}"/>
		</else>
	</if>
	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="tomcat.*"/>
			<equals arg1="${antinstaller_stateful}" arg2="false" />
			<equals arg1="${antinstaller_stateful}" arg2="" />
			<equals arg1="${antinstaller_stateful}" arg2="$${antinstaller_stateful}" />
		</or>
		<then>
			<var name="build_openspcoop_archive_suffix" value="stateless"/>
		</then>
		<else>
			<var name="build_openspcoop_archive_suffix" value="stateful"/>
		</else>
	</if>
	<if>
		<or>
			<equals arg1="${antinstaller_sec_container}" arg2="false" />
			<equals arg1="${antinstaller_sec_container}" arg2="" />
			<equals arg1="${antinstaller_sec_container}" arg2="$${antinstaller_sec_container}" />
		</or>
		<then>
			<if>
				<or>
					<equals arg1="${antinstaller_sec_container}" arg2="" />
					<equals arg1="${antinstaller_sec_container}" arg2="$${antinstaller_sec_container}" />
				</or>
				<then>
					<!-- Abilitato per Default su jboss7 e wildfly -->
					<if>
						<or>
							<matches string="${build_for_as}" pattern="jboss.*"/>
							<matches string="${build_for_as}" pattern="wildfly.*"/>
						</or>
						<then>	
							<var name="build_openspcoop_sec_archive" value="true"/>
						</then>
						<else>
							<var name="build_openspcoop_sec_archive" value="false"/>
						</else>
					</if>
				</then>
				<else>
					<var name="build_openspcoop_sec_archive" value="false"/>
				</else>
			</if>
		</then>
		<else>
			<var name="build_openspcoop_sec_archive" value="true"/>
		</else>
	</if>

	
	<target name="setup" depends="clean,init">

		<if>
			<or>
				<equals arg1="${ant.java.version}" arg2="1.3" />
				<equals arg1="${ant.java.version}" arg2="1.4" />
		     		<equals arg1="${ant.java.version}" arg2="1.5" />
				<equals arg1="${ant.java.version}" arg2="1.6" />
				<equals arg1="${ant.java.version}" arg2="1.7" />
			</or>
			<then>
				<echo message="Java version: ${ant.java.version}"/>
				<fail message="E' richiesta una versione di java 8 o superiore (trovata versione: ${ant.java.version})"/>
			</then>
		</if>
		
		<if>
		        <equals arg1="${antinstaller_directory_lavoro_openspcoop}" arg2="" />
		        <then>
		                <echo message="Errore: deve essere specificata una directory di lavoro" />
		                <fail message="Errore: deve essere specificata una directory di lavoro"/>
		        </then>
		</if>

		<if>
		        <equals arg1="${antinstaller_directory_log_openspcoop}" arg2="" />
		        <then>
		                <echo message="Errore: deve essere specificata una directory di log" />
		                <fail message="Errore: deve essere specificata una directory di log"/>
		        </then>
		</if>

		
		<!-- Impostazione slash per windows in stile unix -->
	    	<if>
			<or>
				<os family="windows"/>
				<os family="dos"/>
			</or>
			<then>
				<propertyregex property="work_dir" override="true" input="${antinstaller_directory_lavoro_openspcoop}" 
					defaultValue="${antinstaller_directory_lavoro_openspcoop}" regexp="\\" replace="/" />
				<propertyregex property="log_dir" override="true" input="${antinstaller_directory_log_openspcoop}" 
					defaultValue="${antinstaller_directory_log_openspcoop}" regexp="\\" replace="/" />
			</then>
	    		<else>
	    			<property name="work_dir" value="${antinstaller_directory_lavoro_openspcoop}"/>
				<property name="log_dir" value="${antinstaller_directory_log_openspcoop}"/>
	    		</else>
		</if>	

                <!-- Normalizzazione '/' -->
                <if>
                        <matches pattern=".*/$" string="${work_dir}" /> 
                        <then>
                                <echo message="Normalizzazione WorkDIR [${work_dir}]"/>
                                <script language="javascript">
                                        var w = project.getProperty("work_dir");
                                        project.setProperty("work_dir", w.substring(0,w.length()-1));
                                </script>
                                <echo message="DOPO Normalizzazione WorkDIR [${work_dir}]"/>
                        </then>
                </if>
                <if>
                        <matches pattern=".*/$" string="${log_dir}" /> 
                        <then>
                                <echo message="Normalizzazione LogDIR [${log_dir}]"/>
                                <script language="javascript">
                                        var w = project.getProperty("log_dir");
                                        project.setProperty("log_dir", w.substring(0,w.length()-1));
                                </script>
                                <echo message="DOPO Normalizzazione LogDIR [${log_dir}]"/>
                        </then>
                </if> 
		
		<!-- Impostazione workDir nei protocolli -->
		<antcall target="setup_workDir_protocolli"/>

		<!-- Impostazione Trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<antcall target="setup_trasparente"/>
			</then>
		</if>

		<!-- Impostazione SPCoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<antcall target="setup_spcoop"/>
			</then>
		</if>

		<!-- Impostazione AS4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<antcall target="setup_as4"/>
			</then>
		</if>

		<!-- Impostazione SDI -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<antcall target="setup_sdi"/>
			</then>
		</if>

	</target>
		
	<target name="setup_workDir_protocolli" depends="_setup_workDir_protocolli"/>
	<target name="_setup_workDir_protocolli">
		
		<!-- Impostazione Trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="trasparente"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione SPCoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="spcoop"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione AS4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="as4"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione SDI -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="sdi"/>
				</antcall>
			</then>
		</if>

	</target>
	<target name="_setup_workDir_protocollo">
		<!-- impostazione proprieta' in as4.properties -->
		<fileset dir="${deploy_sw}" id="archiveProtocol.txt">
		        <include name="openspcoop2_${protocolName}-protocol_*.jar"/>
			<exclude name="openspcoop2_${protocolName}-protocol_*Stub_cxf.jar"/>
		</fileset>
		<pathconvert pathsep=" " property="archiveProtocol_name.txt" refid="archiveProtocol.txt">
		        <map from="${deploy_sw}/" to=""/>
		</pathconvert>
		<!-- <echo message="FILE_NAME '${protocolName}' [${archiveProtocol_name.txt}]"/> -->
		
		<delete dir="${tmp_cfg}/JAR_${protocolName}"/>
		<unzip src="${deploy_sw}/${archiveProtocol_name.txt}" dest="${tmp_cfg}/JAR_${protocolName}"/>
		<concat destfile="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties" append="yes" >

# ----- Personalizzazione Setup GovWay -------------
		</concat>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties"/>
			<param name="token" value="org.openspcoop2.protocol.${protocolName}.confDirectory"/>
			<param name="value" value="${work_dir}"/>
		</antcall>

		<replace file="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties" token="/etc/govway" value="${work_dir}"/>

		<delete file="${deploy_sw}/${archiveProtocol_name.txt}"/>
		<jar destfile="${deploy_sw}/${archiveProtocol_name.txt}" basedir="${tmp_cfg}/JAR_${protocolName}"/>
		<delete dir="${tmp_cfg}/JAR_${protocolName}"/>
	</target>

	<target name="setup_trasparente" depends="_setup_trasparente"/>
	<target name="_setup_trasparente">
		<!-- per ora e' NOP -->
		<!-- <copy file="${deploy_resources}/protocolli/trasparente/trasparente_local.properties" todir="${tmp_cfg}"/> -->
	</target>

	<target name="setup_spcoop" depends="_setup_spcoop"/>
	<target name="_setup_spcoop">
		<copy file="${deploy_resources}/protocolli/spcoop/spcoop_local.properties" todir="${tmp_cfg}"/>
	</target>

	<target name="setup_as4" depends="_setup_as4"/>
	<target name="_setup_as4">
		<mkdir dir="${tmp_cfg}/as4"/>
		<mkdir dir="${tmp_cfg}/as4/securityPolicies"/>
		<copy todir="${tmp_cfg}/as4/securityPolicies">
			<fileset dir="${deploy_resources}/protocolli/as4/securityPolicies"/>
		</copy>
		<copy file="${deploy_resources}/protocolli/as4/as4_local.properties" todir="${tmp_cfg}"/>
		<replace file="${tmp_cfg}/as4_local.properties" token="WORK_DIR" value="${work_dir}"/>
		<replace file="${tmp_cfg}/as4_local.properties" token="http://DOMIBUS-HOST:8080/domibus/services/backend" value="${antinstaller_as4_backend}"/>
		<replace file="${tmp_cfg}/as4_local.properties" token="tcp://DOMIBUS-HOST:61616" value="${antinstaller_as4_jms_url}"/>
		<replace file="${tmp_cfg}/as4_local.properties" token="admin" value="${antinstaller_as4_jms_username}"/>
		<replace file="${tmp_cfg}/as4_local.properties" token="123456" value="${antinstaller_as4_jms_password}"/>

		<!-- impostazione proprieta' in as4.properties -->
                <fileset dir="${deploy_sw}" id="archiveAS4.txt">
                        <include name="openspcoop2_as4-protocol_*.jar"/>
			<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
                </fileset>
		<pathconvert pathsep=" " property="archiveAS4_name.txt" refid="archiveAS4.txt">
                        <map from="${deploy_sw}/" to=""/>
                </pathconvert>
		<!-- <echo message="FILE_NAME [${archiveAS4_name.txt}]"/> -->
                
		<delete dir="${tmp_cfg}/JAR_AS4"/>
		<unzip src="${deploy_sw}/${archiveAS4_name.txt}" dest="${tmp_cfg}/JAR_AS4"/>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.trace.dataSource"/>
			<param name="value" value="${datasource_pdd_name}"/>
		</antcall>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.trace.tipoDatabase"/>
			<param name="value" value="${antinstaller_tipo_database}"/>
		</antcall>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.domibus.dataSource"/>
			<param name="value" value="${datasource_domibus_name}"/>
		</antcall>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.domibus.tipoDatabase"/>
			<param name="value" value="${antinstaller_as4_tipo_database}"/>
		</antcall>
		<delete file="${deploy_sw}/${archiveAS4_name.txt}"/>
		<jar destfile="${deploy_sw}/${archiveAS4_name.txt}" basedir="${tmp_cfg}/JAR_AS4"/>
		<delete dir="${tmp_cfg}/JAR_AS4"/>

	</target>

	<target name="setup_sdi" depends="_setup_sdi"/>
	<target name="_setup_sdi">
		<!-- per ora e' NOP -->
		<!-- <copy file="${deploy_resources}/protocolli/sdi/sdi_local.properties" todir="${tmp_cfg}"/> -->
	</target>

	<target name="setup_pdd" depends="_setup_pdd"/>
	<target name="_setup_pdd">
		<if>
			<or>
				<matches string="${build_for_as}" pattern="jboss.*"/>
				<matches string="${build_for_as}" pattern="wildfly.*"/>
			</or>
			<then>
				<!-- unzip -->
				<unzip src="${deploy_sw}/${build_for_as}/govway_${build_openspcoop_archive_suffix}.ear" dest="${tmp_archivi}/govway.ear"/>
				<!-- configuration -->
				<antcall target="pdd_govway_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.properties"/>
				</antcall>
				<antcall target="pdd_openspcoop2_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.log4j2.properties"/>
				</antcall>
				<antcall target="pdd_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/log4j2.properties"/>
				</antcall>
				<antcall target="pdd_protocolAdjunct_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.protocolAdjunct.log4j2.properties"/>
				</antcall>
				<antcall target="pdd_govway.classRegistry.properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.classRegistry.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_archivi}/govway.ear/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
						    <fileset dir="${deploy_sw}">
						      <include name="openspcoop2_trasparente-protocol_*.jar"/>
						    </fileset>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
						    <fileset dir="${deploy_sw}">
						      <include name="openspcoop2_spcoop-protocol_*.jar"/>
						    </fileset>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
						    <fileset dir="${deploy_sw}">
						      <include name="openspcoop2_as4-protocol_*.jar"/>
						    </fileset>
						</copy>
						<copy todir="${tmp_archivi}/govway.ear/lib">
						    <fileset dir="${deploy_sw}/jars">
						    	<include name="activemq-client-*.jar"/>
							<include name="hawtbuf-*.jar"/>
							<include name="javax.jms.jar"/>
							<include name="javax.management.jar"/>
						    </fileset>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
						    <fileset dir="${deploy_sw}">
						      <include name="openspcoop2_sdi-protocol_*.jar"/>
						    </fileset>
						</copy>
					</then>
				</if>

	
				<!-- govwaySec -->
				<if>
					<not>
						<istrue value="${build_openspcoop_sec_archive}" />
					</not>
					<then>
						<delete file="${tmp_archivi}/govway.ear/govwaySec.war" />
						<replace file="${tmp_archivi}/govway.ear/META-INF/application.xml" token="start Security Constraint Authentication Container -->" value="start Security Constraint Authentication Container"/>
						<replace file="${tmp_archivi}/govway.ear/META-INF/application.xml" token="&lt;!-- end Security Constraint Authentication Container" value="end Security Constraint Authentication Container"/>
					</then>
				</if>	
				
							
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govway.ear"/>
					<param name="as" value="${build_for_as}"/>
				</antcall>
			</then>
			<else>
				<!-- unzip -->
				<unzip src="${deploy_sw}/${build_for_as}/openspcoop2_${build_openspcoop_archive_suffix}.war" dest="${tmp_archivi}/govway.war"/>
				<!-- configuro openspcoopp2.war -->
				<antcall target="-create_tomcat_war">
				    <param name="tomcat_war" value="${tmp_archivi}/govway.war"/>
				</antcall>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govway.war"/>
					<param name="as" value="${build_for_as}"/>
				</antcall>


				<!-- govwaySec -->
				<if>
					<istrue value="${build_openspcoop_sec_archive}" />
					<then>
						<!-- unzip -->
						<unzip src="${deploy_sw}/${build_for_as}/govwaySec_${build_openspcoop_archive_suffix}.war" dest="${tmp_archivi}/govwaySec.war"/>
						<!-- configuro openspcoopp2.war -->
						<antcall target="-create_tomcat_war">
						    <param name="tomcat_war" value="${tmp_archivi}/govwaySec.war"/>
						</antcall>
						<!-- Ripristino jar -->
						<antcall target="ripristina_jar">
						    <param name="archiveFile" value="${tmp_archivi}/govwaySec.war"/>
							<param name="as" value="${build_for_as}"/>
						</antcall>
					</then>
				</if>	
			</else>
		</if>		
	</target>
	<target name="-create_tomcat_war">
		<!-- configuration -->
		<antcall target="pdd_govway_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.properties"/>
		</antcall>
		<antcall target="pdd_openspcoop2_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.log4j2.properties"/>
		</antcall>
		<antcall target="pdd_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="pdd_protocolAdjunct_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.protocolAdjunct.log4j2.properties"/>
		</antcall>
		<antcall target="pdd_govway.classRegistry.properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.classRegistry.properties"/>
		</antcall>
		<antcall target="dos2unix">
		    <param name="dir" value="${tomcat_war}/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_trasparente-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_spcoop-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_as4-protocol_*.jar"/>
				    </fileset>
				</copy>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}/jars">
				    	<include name="activemq-client-*.jar"/>
					<include name="hawtbuf-*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_sdi-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
	</target>
	
	<target name="setup_sql" >
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="nuova"/>
			<then>
				<antcall target="_setup_sql_nuova_installazione"/>
			</then>
			<else>
				<antcall target="_setup_sql_aggiornamento"/>
			</else>
		</if>
	</target>
	<target name="_setup_sql_nuova_installazione">
		
		<copy todir="${tmp_sql}">
			<fileset dir="${deploy_sql}/${antinstaller_tipo_database}">
		    		<include name="govway_*drop.sql"/>
				<include name="govway_*delete.sql"/>
			</fileset>
		</copy>
		
		<if>
			<equals arg1="${antinstaller_tipo_database}" arg2="sqlserver"/>
			<then>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes">
<![CDATA[-- Livello Isolamento
ALTER DATABASE @DATABASE@ SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE @DATABASE@ SET READ_COMMITTED_SNAPSHOT ON;]]>
				</concat>
			</then>
		</if>
		
		<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
	      <header filtering="no" trimleading="yes">

-- GovWay
	      	
	      </header>
		  <filelist dir="${deploy_sql}"
                           files="${antinstaller_tipo_database}/GovWay.sql init.sql"/>
		</concat>
		
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_trasparente.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_trasparente.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_trasparente}"/>
					<param name="sql_idporta" value="domain/gw/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_trasparente}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol trasparente
					      	
				  </header>					
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_trasparente.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_trasparente.sql" failonerror="false"/>
			</then>
		</if>

		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_spcoop.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_spcoop.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_spcoop}"/>
					<param name="sql_idporta" value="${antinstaller_nomesoggetto}SPCoopIT"/>
					<param name="sql_codiceipa" value="o=${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="eGov1.1-lineeGuida1.1"/>
				</antcall>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol spcoop
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_spcoop.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_spcoop.sql" failonerror="false"/>
			</then>
		</if>
		
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_as4.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_as4.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_as4}"/>
					<param name="sql_idporta" value="domain/as4/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_as4}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol as4
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_as4.sql"/>
				</concat>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
<![CDATA[INSERT INTO config_protocolli (nome,url_pd,url_pa) VALUES ('as4','http://localhost:8080/govway/as4/out/','${antinstaller_as4_msh}');
]]>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_as4.sql" failonerror="false"/>
			</then>
		</if>

		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_sdi.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_sdi.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_sdi}"/>
					<param name="sql_idporta" value="domain/sdi/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_sdi}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol sdi
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_sdi.sql"/>
				</concat>
				<concat destfile="${tmp_sql}/GovWay.sql" append="yes" >
<![CDATA[INSERT INTO config_protocolli (nome,url_pd,url_pa) VALUES ('sdi','http://localhost:8080/govway/sdi/out/xml2soap/','http://localhost:8080/govway/sdi/in/');
]]>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_sdi.sql" failonerror="false"/>
			</then>
		</if>
			
		<!-- Imposto corretti valori nei threshold -->
		<antcall target="sql_settings">
		    <param name="file" value="${tmp_sql}/GovWay.sql"/>
		</antcall>
		
		<!-- password cifrata per l'utenza govwayConsole -->
		<java classname="org.openspcoop2.utils.crypt.Password" fork="true" outputproperty="antinstaller_pddconsole_password_md5">
			<arg value="${antinstaller_pddconsole_password}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
			   	</path>				
			</classpath>
		</java>
		<copy file="${deploy_sql}/init_utenzaPddConsole.sql" tofile="${tmp_sql}/init_utenzaPddConsole.sql" overwrite="true"/>

		<!-- password cifrata per l'utenza govwayMonitor -->
		<java classname="org.openspcoop2.utils.crypt.Password" fork="true" outputproperty="antinstaller_pddmonitor_password_md5">
			<arg value="${antinstaller_pddmonitor_password}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
			   	</path>				
			</classpath>
		</java>
		<copy file="${deploy_sql}/init_utenzaPddMonitor.sql" tofile="${tmp_sql}/init_utenzaPddMonitor.sql" overwrite="true"/>

		<!-- Registro modifiche delle utenze sul file SQL -->
		<antcall target="sql_settings_users">
		    <param name="file" value="${tmp_sql}/GovWay.sql"/>
		</antcall>

		<!-- Effettuo split DDL e DML -->
		<mkdir dir="${tmp_sql}/ORIG"/>
		<move file="${tmp_sql}/GovWay.sql" todir="${tmp_sql}/ORIG"/>
		<java classname="org.openspcoop2.core.commons.SQLScriptBuilder" fork="true" outputproperty="_output_sql_ddl">
			<arg value="${tmp_sql}/ORIG" />
			<arg value="${tmp_sql}" />
			<arg value="${antinstaller_modalita_installazione}" />
			<arg value="${antinstaller_versione_precedente}" />
			<arg value="${antinstaller_versione_attuale}" />
			<arg value="${antinstaller_tipo_database}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_core_*.jar"/>
			   	</path>				
			</classpath>
		</java>
		<delete dir="${tmp_sql}/ORIG"/>
		<if>
			<not>
				<equals arg1="${_output_sql_ddl}" arg2=""/>
			</not>
			<then>
				<fail message="Generazione sql DDL fallita: ${_output_sql_ddl}"/>	
			</then>
		</if>
		
	</target>
	
	<target name="_setup_sql_aggiornamento">
		<!-- SQL di Aggiornamento -->
		<java classname="org.openspcoop2.core.commons.SQLScriptBuilder" fork="true" outputproperty="_output_sql_ddl">
			<arg value="${deploy_sql}/sql_upgrade" />
			<arg value="${tmp_sql}" />
			<arg value="${antinstaller_modalita_installazione}" />
			<arg value="${antinstaller_versione_precedente}" />
			<arg value="${antinstaller_versione_attuale}" />
			<arg value="${antinstaller_tipo_database}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_core_*.jar"/>
			   	</path>				
			</classpath>
		</java>
		<if>
			<not>
				<equals arg1="${_output_sql_ddl}" arg2=""/>
			</not>
			<then>
				<fail message="Generazione sql di aggiornamento: ${_output_sql_ddl}"/>	
			</then>
		</if>
	</target>

	<target name="setup_datasource" depends="_setup_datasource"/>
	<target name="_setup_datasource">
		<if>
			<matches string="${build_for_as}" pattern="jboss.*"/>
			<then>
				<var name="jboss_datasource_dir_name" value=""/>
				<if>
					<or>
						<equals arg1="${build_for_as}" arg2="jboss4" />
						<equals arg1="${build_for_as}" arg2="jboss5" />
						<equals arg1="${build_for_as}" arg2="jboss6" />
					</or>
					<then>
						<var name="jboss_datasource_dir_name" value="v4_v5_v6"/>
					</then>
					<else>
						<var name="jboss_datasource_dir_name" value="v7"/>
					</else>
				</if>		
				<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway-ds.xml"/>
				</antcall>
				<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway_console-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
				</antcall>

				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_as4_tipo_database}/govway-ds.xml" 
							tofile="${tmp_ds}/domibus-ds.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
						</antcall>
					</then>
				</if>
			</then>
		</if>
		<if>
			<matches string="${build_for_as}" pattern="wildfly.*"/>
			<then>		
				<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway-ds.xml"/>
				</antcall>
				<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway_console-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
				</antcall>

				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/wildfly/${antinstaller_as4_tipo_database}/govway-ds.xml" 
							tofile="${tmp_ds}/domibus-ds.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
						</antcall>
					</then>
				</if>
			</then>
		</if>
		<if>
			<matches string="${build_for_as}" pattern="tomcat.*"/>
			<then>
				<var name="tomcat_datasource_dir_name" value=""/>
				<if>
					<or>
						<equals arg1="${antinstaller_as}" arg2="tomcat5" />
						<equals arg1="${antinstaller_as}" arg2="tomcat6" />
						<equals arg1="${antinstaller_as}" arg2="tomcat7" />
					</or>
					<then>
						<var name="tomcat_datasource_dir_name" value="v5_v6_v7"/>
					</then>
					<else>
						<var name="tomcat_datasource_dir_name" value="v8_v9"/>
					</else>
				</if>		
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govway.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway.xml"/>
				</antcall>
				<!-- govwaySec -->
				<if>
					<istrue value="${build_openspcoop_sec_archive}" />
					<then>
						<copy file="${tmp_ds}/govway.xml" tofile="${tmp_ds}/govwaySec.xml"/>
					</then>
				</if>
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayLoader.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govwayLoader.xml"/>
				</antcall>
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayConsole.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govwayConsole.xml"/>
				</antcall>
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayMonitor.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govwayMonitor.xml"/>
				</antcall>

				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_as4_tipo_database}/domibus.xml" 
							tofile="${tmp_ds}/domibus.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus.xml"/>
						</antcall>
						<replace file="${tmp_ds}/govway.xml" token="&lt;/Context>" value=""/>
						<concat destfile="${tmp_ds}/govway.xml" append="yes" >
						  <filelist dir="${tmp_ds}"
							   files="domibus.xml"/>
						</concat>
						<delete file="${tmp_ds}/domibus.xml"/>
						<concat destfile="${tmp_ds}/govway.xml" append="yes">
<![CDATA[</Context>]]></concat>
					</then>
				</if>
			</then>
		</if>
	</target>

	<target name="setup_govwayConsole" depends="_setup_govwayConsole"/>
	<target name="_setup_govwayConsole">
		<!-- unzip -->
		<unzip src="${deploy_sw}/${build_for_as}/govwayConsole.war" dest="${tmp_archivi}/govwayConsole.war"/>
		<!-- configuration -->
		<antcall target="govwayConsole_console_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.properties"/>
		</antcall>
		<antcall target="govwayConsole_console_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_console_audit_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.audit.log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_datasource_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.datasource.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes"/>
		    <param name="file" value="*.cfg"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_trasparente-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_spcoop-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				        <include name="openspcoop2_as4-protocol_*.jar"/>
					<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_sdi-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- Ripristino jar -->
		<antcall target="ripristina_jar">
		    <param name="archiveFile" value="${tmp_archivi}/govwayConsole.war"/>
			<param name="as" value="${build_for_as}"/>
			<param name="archiveType" value="WAR"/>
		</antcall>
	</target>

	<target name="setup_govwayMonitor" depends="_setup_govwayMonitor"/>
	<target name="_setup_govwayMonitor">
		<!-- unzip -->
		<unzip src="${deploy_sw}/${build_for_as}/govwayMonitor.war" dest="${tmp_archivi}/govwayMonitor.war"/>
		<!-- configuration -->
		<antcall target="govwayMonitor_monitor_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/monitor.properties"/>
		</antcall>
		<antcall target="govwayMonitor_monitor_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/monitor.log4j2.properties"/>
		</antcall>
		<antcall target="govwayMonitor_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="govwayMonitor_datasource_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/daoFactory_local.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes"/>
		    <param name="file" value="*.cfg"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_trasparente-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_spcoop-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				        <include name="openspcoop2_as4-protocol_*.jar"/>
					<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_sdi-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- Ripristino jar -->
		<antcall target="ripristina_jar">
		    <param name="archiveFile" value="${tmp_archivi}/govwayMonitor.war"/>
			<param name="as" value="${build_for_as}"/>
			<param name="archiveType" value="WAR"/>
		</antcall>
	</target>
	
	<target name="setup_loader" depends="_setup_loader"/>
	<target name="_setup_loader">
		<unzip src="${deploy_sw}/${build_for_as}/govwayLoader.war" dest="${tmp_archivi}/govwayLoader.war"/>
		<antcall target="loader_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.properties"/>
		</antcall>
		<antcall target="loader_datasource_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.datasource.properties"/>
		</antcall>
		<antcall target="loader_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.log4j2.properties"/>
		</antcall>
		<antcall target="loader_default_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_trasparente-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_spcoop-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				        <include name="openspcoop2_as4-protocol_*.jar"/>
					<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
				    <fileset dir="${deploy_sw}">
				      <include name="openspcoop2_sdi-protocol_*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- Ripristino jar -->
		<antcall target="ripristina_jar">
		    <param name="archiveFile" value="${tmp_archivi}/govwayLoader.war"/>
			<param name="as" value="${build_for_as}"/>
			<param name="archiveType" value="WAR"/>
		</antcall>
	</target>
		
	
	<target name="setup_backward_compatibility" depends="_setup_backward_compatibility"/>
	<target name="_setup_backward_compatibility">
		<if>
			<and>
				<istrue value="${antinstaller_protocollo_spcoop}"/>
				<istrue value="${antinstaller_backward_compatibility}"/>
			</and>
			<then>
				<unzip src="${deploy_sw}/${build_for_as}/OpenSPCoopV1BackwardCompatibility.war" dest="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war"/>
				
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war"/>
					<param name="as" value="${build_for_as}"/>
					<param name="archiveType" value="WAR"/>
				</antcall>
				
				<!-- Sposto configurazioni nella PdD -->
				<if>
					<or>
						<matches string="${build_for_as}" pattern="jboss.*"/>
						<matches string="${build_for_as}" pattern="wildfly.*"/>
					</or>
					<then>
						<move todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war/WEB-INF/lib">
						    	<include name="*.jar"/>
							</fileset>
						</move>
						<move todir="${tmp_archivi}/govway.ear/properties">
							<fileset dir="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war/WEB-INF/classes">
						    	<include name="*.properties"/>
							</fileset>
						</move>
					</then>
					<else>
						<move todir="${tmp_archivi}/govway.war/WEB-INF/lib">
							<fileset dir="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war/WEB-INF/lib">
						    	<include name="*.jar"/>
							</fileset>
						</move>
						<move todir="${tmp_archivi}/govway.war/WEB-INF/classes">
							<fileset dir="${tmp_archivi}/OpenSPCoopV1BackwardCompatibility.war/WEB-INF/classes">
						    	<include name="*.properties"/>
							</fileset>
						</move>
					</else>
				</if>
									
			</then>
		</if>
	</target>
	
	
	<target name="setup_finished" depends="_setup_finished"/>
	<target name="_setup_finished">
		<antcall target="make-distrib"/>
		<delete dir="${build}"/>
	</target>


</project>
