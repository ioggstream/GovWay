L'upgrade del database da una versione alla successiva comporta l'applicazione delle patch sql incluse nelle directory del proprio database.


1) Progressione di Versione in Versione

Se tra la nuova versione del software e la precedente sono state rilasciate altre versioni intermedie, le patch sql devono essere applicate in ordine facendo "promuovere" il database di versione in versione fino alla nuova versione del software scelto. 
Inoltre se la tra versione di partenza e la versione di destinazione è stata rilasciata una versione major (3.majorVersion.minorVersion), dovrà essere utilizzata la directory upgrade_3.<major-1>.x_to_2.<major>.0 come passaggio tra l'ultima patch minor disponibile per la major-1 e la prima patch disponibile per la nuova major. Di seguito verrà fornito un esempio di uno scenario di upgrade che coinvole anche l'upgrade verso una versione major successiva.
Ad esempio supponiamo uno scenario in cui sia stata installata la versione 3.0.4 e si vuole procedere all'upgrade verso la versione 3.2.3; il tipo di database è postgresql.
Le patch sql dovranno essere applicate nel seguente ordine:
- upgrade_3.1.4_to_3.1.5
- upgrade_3.1.x_to_3.2.0
- upgrade_3.2.0_to_3.2.1
- upgrade_3.2.1_to_3.2.2
- upgrade_3.2.2_to_3.2.3


2) Ordine di Applicabilità delle patch di una Versione

All'interno di ogni directory 'Upgrade_3.x.y_to_3.x.z' sono presenti più patch sql per ogni tipo di database supportato. 
Le patch interne ad ogni directory devono essere applicate nell'ordine crescente della data indicata nel prefisso: tipoDatabase/<data>-patch.sql
Infine deve essere applicata (indipendentemente dal tipo di database) la patch 'info-patch.sql'.
Ad esempio nella directory Upgrade_2.1.x_to_2.2.0 le patch presenti andranno applicate in questo ordine:
- postgresql/2018-09-24-patch.sql
- postgresql/2018-11-03-patch.sql
- info-patch.sql

